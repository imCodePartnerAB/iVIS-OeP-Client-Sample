package com.nordicpeak.flowengine.beans;

import java.sql.Timestamp;
import java.util.List;

import se.unlogic.hierarchy.core.beans.User;
import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.OrderBy;
import se.unlogic.standardutils.enums.Order;
import se.unlogic.standardutils.string.StringUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

import com.nordicpeak.flowengine.interfaces.ImmutableMessage;

public abstract class BaseMessage extends GeneratedElementable implements ImmutableMessage {

	@DAOManaged(autoGenerated = true)
	@Key
	@XMLElement
	protected Integer messageID;

	@DAOManaged
	@WebPopulate(required = true, maxLength = 65535)
	@XMLElement
	protected String message;

	@DAOManaged(dontUpdateIfNull = true)
	@XMLElement(childName = "poster")
	protected User poster;

	@DAOManaged
	@OrderBy(order = Order.ASC)
	@XMLElement
	protected Timestamp added;

	@DAOManaged(dontUpdateIfNull = true)
	@XMLElement(childName = "editor")
	protected User editor;

	@DAOManaged
	@XMLElement
	protected Timestamp updated;

	@Override
	public abstract List<? extends BaseAttachment> getAttachments();

	@Override
	public abstract List<? extends BaseMessageReadReceipt> getReadReceipts();

	@Override
	public Integer getMessageID() {

		return messageID;
	}

	public void setMessageID(Integer messageID) {

		this.messageID = messageID;
	}

	@Override
	public String getMessage() {

		return message;
	}

	public void setMessage(String message) {

		this.message = message;
	}

	@Override
	public User getPoster() {

		return poster;
	}

	public void setPoster(User poster) {

		this.poster = poster;
	}

	@Override
	public Timestamp getAdded() {

		return added;
	}

	public void setAdded(Timestamp added) {

		this.added = added;
	}

	@Override
	public User getEditor() {

		return editor;
	}

	public void setEditor(User editor) {

		this.editor = editor;
	}

	@Override
	public Timestamp getUpdated() {

		return updated;
	}

	public void setUpdated(Timestamp updated) {

		this.updated = updated;
	}
	
	@Override
	public String toString() {
		
		return StringUtils.toLogFormat(message, 50) + " (ID: " + messageID + ")";
	}
}
