package com.nordicpeak.flowengine.beans;

import java.io.Serializable;
import java.lang.reflect.Field;
import java.util.List;

import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.OrderBy;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.populators.PositiveStringIntegerPopulator;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

import com.nordicpeak.flowengine.enums.ContentType;

@Table(name = "flowengine_standard_statuses")
@XMLElement
public class StandardStatus extends GeneratedElementable implements Serializable {

	private static final long serialVersionUID = -9064856969314028632L;

	public static final Field DEFAULT_STANDARD_STATUS_MAPPINGS_RELATION = ReflectionUtils.getField(StandardStatus.class, "defaultStandardStatusMappings");

	@DAOManaged(autoGenerated = true)
	@Key
	@XMLElement
	private Integer statusID;

	@DAOManaged
	@OrderBy
	@WebPopulate(required = true, maxLength = 255)
	@XMLElement
	private String name;

	@DAOManaged
	@WebPopulate(maxLength = 65536)
	@XMLElement
	private String description;
	
	@DAOManaged
	@WebPopulate(populator = PositiveStringIntegerPopulator.class)
	@XMLElement
	private Integer managingTime;
	
	@DAOManaged
	@WebPopulate
	@XMLElement
	private boolean isUserMutable;

	@DAOManaged
	@WebPopulate
	@XMLElement
	private boolean isUserDeletable;

	@DAOManaged
	@WebPopulate
	@XMLElement
	private boolean isAdminMutable;

	@DAOManaged
	@WebPopulate
	@XMLElement
	private boolean isAdminDeletable;

	@DAOManaged
	@WebPopulate(required = true)
	@XMLElement
	private ContentType contentType;

	@DAOManaged
	@OneToMany
	@XMLElement(fixCase = true)
	private List<DefaultStandardStatusMapping> defaultStandardStatusMappings;

	public Integer getStatusID() {

		return statusID;
	}

	public void setStatusID(Integer statusID) {

		this.statusID = statusID;
	}

	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	/**
	 * @return the description
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * @param description the description to set
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * @return the managingTime
	 */
	public Integer getManagingTime() {
		return managingTime;
	}

	/**
	 * @param managingTime the managingTime to set
	 */
	public void setManagingTime(Integer managingTime) {
		this.managingTime = managingTime;
	}

	public boolean isUserMutable() {

		return isUserMutable;
	}

	public void setUserMutable(boolean isUserMutable) {

		this.isUserMutable = isUserMutable;
	}

	public boolean isAdminMutable() {

		return isAdminMutable;
	}

	public void setAdminMutable(boolean isAdminMutable) {

		this.isAdminMutable = isAdminMutable;
	}

	@Override
	public String toString() {

		return name + " (ID: " + statusID + ")";
	}

	public boolean isUserDeletable() {

		return isUserDeletable;
	}

	public void setUserDeletable(boolean isUserDeletable) {

		this.isUserDeletable = isUserDeletable;
	}

	public ContentType getContentType() {

		return contentType;
	}

	public void setContentType(ContentType contentType) {

		this.contentType = contentType;
	}

	public boolean isAdminDeletable() {

		return isAdminDeletable;
	}

	public void setAdminDeletable(boolean isAdminDeletable) {

		this.isAdminDeletable = isAdminDeletable;
	}

	@Override
	public int hashCode() {

		final int prime = 31;
		int result = 1;
		result = prime * result + ((statusID == null) ? 0 : statusID.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		StandardStatus other = (StandardStatus) obj;
		if (statusID == null) {
			if (other.statusID != null) {
				return false;
			}
		} else if (!statusID.equals(other.statusID)) {
			return false;
		}
		return true;
	}


	public List<DefaultStandardStatusMapping> getDefaultStandardStatusMappings() {

		return defaultStandardStatusMappings;
	}


	public void setDefaultStandardStatusMappings(List<DefaultStandardStatusMapping> defaultStandardStatusMappings) {

		this.defaultStandardStatusMappings = defaultStandardStatusMappings;
	}
}
