package com.nordicpeak.flowengine.beans;

import java.lang.reflect.Field;
import java.util.List;

import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.OrderBy;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

import com.nordicpeak.flowengine.interfaces.ImmutableCategory;

@Table(name = "flowengine_flow_categories")
@XMLElement
public class Category extends GeneratedElementable implements ImmutableCategory {

	private static final long serialVersionUID = -2717780511646598263L;

	public static final Field FLOW_TYPE_RELATION = ReflectionUtils.getField(Category.class, "flowType");

	@DAOManaged(autoGenerated = true)
	@Key
	@XMLElement
	private Integer categoryID;

	@DAOManaged
	@OrderBy
	@WebPopulate(required = true, maxLength=255)
	@XMLElement
	private String name;

	@DAOManaged(columnName="flowTypeID")
	@ManyToOne
	private FlowType flowType;

	@DAOManaged
	@OneToMany
	private List<Flow> flows;

	@Override
	public Integer getCategoryID() {

		return categoryID;
	}

	public void setCategoryID(Integer categoryID) {

		this.categoryID = categoryID;
	}

	@Override
	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	@Override
	public FlowType getFlowType() {

		return flowType;
	}

	public void setFlowType(FlowType flowType) {

		this.flowType = flowType;
	}

	@Override
	public List<Flow> getFlows() {

		return flows;
	}

	public void setFlows(List<Flow> flows) {

		this.flows = flows;
	}

	@Override
	public String toString() {

		return "name: " + name + " (ID: " + categoryID + ")";
	}
}
